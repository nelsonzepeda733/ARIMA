#Se carga las librerias necesarias
library(forecast)
library(tseries)

#Cargamos los datos co2
co2<-read.csv("C:/Users/Nelson/Desktop/Curso Machine Learning/AFPCrecer/CursoEstudio/10) SeriesTemporalesARIMA/Ejercicios/co2.csv", header = TRUE, sep = ";")
#Transformamos los datos en una serie temporal 
co2ts<-ts(co2$CO2, start = c(1959,1), frequency = 12)
print(co2ts)

library(ggfortify)

#Trazamos la serie de tiempo co2ts
autoplot(co2ts, ts.colour = "blue", ts.linetype = "dashed")

autoplot(acf(co2ts, plot = FALSE))

autoplot(stl(co2ts, s.window = "periodic"), ts.colour = "blue")

#calculan cada una el número de diferenciaciones regulares y estacionales respectivamente que se necesita llevar a cabo para que la serie sea estacionaria.
ndiffs(co2ts)
nsdiffs(co2ts)

diff.co2ts<-autoplot(diff(co2ts), ts.linetype = "dashed", ts.colour = "darkmagenta")
diff.co2ts

autoplot(acf(diff(co2ts), plot = FALSE))

# la serie sigue sin ser estacionaria, ya que la función de autocorrelación decrece rápidamente en los desfaces regulares

diffco2<-diff(co2ts)
boxplot(diffco2~cycle(diffco2))

diff.co2ts.12<-diff(co2ts, lag = 12)
autoplot(diff.co2ts.12, ts.colour = "darkorange4", ts.linetype = "dashed")

library(tseries)
adf<-adf.test(diff.co2ts.12)
adf$p.value

kpss<-kpss.test(diff.co2ts.12)
kpss$p.value
#El valor 0.1 del test indica que se puede rechazar la hipótesis nula H0 indicando que la serie es es no estacionaria.

library(forecast)
arima1<- Arima(co2ts, order=c(0,1,2), seasonal=list(order=c(0,1,1),period=12))
arima2<- Arima(co2ts, order=c(1,1,0), seasonal=list(order=c(2,1,0),period=12))
arima3<- Arima(co2ts, order=c(1,1,2), seasonal=list(order=c(2,1,1),period=12))
arima4<- Arima(co2ts, order=c(1,1,1), seasonal=list(order=c(2,1,1),period=12))
arima5<- Arima(co2ts, order=c(1,1,2), seasonal=list(order=c(1,1,1),period=12))
arima6<- Arima(co2ts, order=c(0,1,1), seasonal=list(order=c(0,1,1),period=12))
arima7<- Arima(co2ts, order=c(1,1,0), seasonal=list(order=c(1,1,0),period=12))


AIC(arima1,arima2,arima3,arima4,arima5,arima6,arima7)

BIC(arima1,arima2,arima3,arima4,arima5,arima6,arima7)

#df-> Number of parameters
autoplot(acf(arima6$residuals, plot = FALSE))

ggtsdiag(arima6)

auto.arima(co2ts, stepwise = FALSE, approximation = FALSE)

forecast1<-forecast(arima6, level = c(95), h = 50)
autoplot(forecast1)